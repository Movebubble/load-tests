<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.0 r1840935">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Movebubble Production Load Testing (Plan)" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Renter App Flow (Thread Group)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">50</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">9999999</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login Anonymous Renter (Request)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;appKey&quot;: &quot;SEARCH_APP&quot;,&#xd;
	&quot;authDetails&quot;: {&#xd;
		&quot;type&quot;: &quot;ANONYMOUS&quot;&#xd;
	}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/auth/auth</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Auth Token Extractor (JSON Extractor)" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">xAuthToken</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="User Id Extractor (JSON Extractor)" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">userId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.userId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Auth Success Condition (If Controller)" enabled="true">
          <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Push Several Analytics Events (Loop Controller)" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Post App Install Event (Request)" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
&quot;userId&quot;:&quot;${userId}&quot;,&#xd;
&quot;authToken&quot;:&quot;${xAuthToken}&quot;,&#xd;
&quot;appKey&quot;:&quot;SEARCH_APP&quot;,&#xd;
&quot;appVersion&quot;:&quot;1.0.2.1&quot;,&#xd;
&quot;cityKey&quot;:&quot;LONDON&quot;,&#xd;
&quot;deviceDetails&quot;:&#xd;
{&quot;deviceId&quot;:&quot;iPhone12,1&quot;,&quot;platformType&quot;:&quot;Handset&quot;,&quot;brand&quot;:&quot;Apple&quot;,&quot;buildNumber&quot;:&quot;1&quot;,&quot;batteryLevel&quot;:0,&quot;deviceType&quot;:&quot;Handset&quot;,&quot;version&quot;:&quot;1.0.2&quot;,&quot;systemName&quot;:&quot;iOS&quot;,&quot;systemVersion&quot;:&quot;13.1&quot;,&quot;deviceUniqueId&quot;:&quot;44B9EB15-0B10-46F1-9A9A-3723C7AF1DD1&quot;,&quot;osVersion&quot;:&quot;unknown&quot;,&quot;pnEnabled&quot;:false,&quot;usedMemory&quot;:0},&quot;internetConnectionDetails&quot;:{&quot;type&quot;:&quot;wifi&quot;,&quot;carrier&quot;:&quot;&quot;,&quot;cellularGeneration&quot;:&quot;&quot;,&quot;internetConnectionDetails&quot;:{&quot;type&quot;:&quot;wifi&quot;,&quot;carrier&quot;:&quot;&quot;,&quot;cellularGeneration&quot;:&quot;&quot;}},&quot;events&quot;:[{&quot;type&quot;:&quot;APP_INSTALL&quot;,&quot;clientDateTime&quot;:1579523774263,&quot;details&quot;:&quot;{\&quot;is_first_launch\&quot;:false,\&quot;install_time\&quot;:\&quot;2020-01-20 12:35:04.261\&quot;,\&quot;af_message\&quot;:\&quot;organic install\&quot;,\&quot;af_status\&quot;:\&quot;Organic\&quot;}&quot;}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/analytics/events</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">x-analytics-api-key</stringProp>
                    <stringProp name="Header.value">eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhdXRoLXNlcnZpY2UiLCJleHAiOjIxNzkzNDg0MDgsImp0aSI6ImpHczdac0NVQ3JvNGVhYnBCV2FHbXciLCJpYXQiOjE1NzkzNDg0NzIsIm5iZiI6MTU3OTM0ODM1Miwic3ViIjoiZUp4bFQ4c0t3akFRL0plYy9ZTGVwQlFzbGhha25xU1VOVjFyTUc1Q3NrRnI2YjhiZkJZOXp1ek03TXdvTEhoL01hNFRpUkFMRVR3NmdqTkdCQVI2WUNWOXBDSHcwVGpGQ3IxSWR1TUhEMUczcVlxc3JiTjAxUzdUdE5xV3RaaWE2SkRTQk9MU1VIYTF5bUhNWnhkd2ZpaU1QSDE1R1RWSXJFRDdmeE1TN1BVc3c5bzF4dDhVdEg1MnpydWZ4b0VVNTY5Unh2VkE2Z2FzREwyNUF3SUhoN1hwZS8wWTFVeDNUUXhkaWc9PSJ9.JAELYek-JfvKo_CHfA-o5L-qktlgzjxZAlUygrp93SQ</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="Open Non-Streaming Notifications Socket (WebSocket Sampler)" enabled="true">
            <stringProp name="serverAddress">${TestEnvApiDomain}</stringProp>
            <stringProp name="serverPort">443</stringProp>
            <stringProp name="implementation">RFC6455 (v13)</stringProp>
            <stringProp name="protocol">wss</stringProp>
            <stringProp name="contextPath">/api/notification/notifications/socket?X-Auth-Token=${xAuthToken}</stringProp>
            <stringProp name="contentEncoding">UTF-8</stringProp>
            <stringProp name="requestPayload">{&quot;type&quot;:&quot;HEART_BEAT&quot;}</stringProp>
            <stringProp name="connectionTimeout">5000</stringProp>
            <stringProp name="responseTimeout">20000</stringProp>
            <boolProp name="ignoreSslErrors">false</boolProp>
            <boolProp name="streamingConnection">false</boolProp>
            <stringProp name="connectionId"></stringProp>
            <stringProp name="responsePattern"></stringProp>
            <stringProp name="closeConncectionPattern"></stringProp>
            <stringProp name="proxyAddress"></stringProp>
            <stringProp name="proxyPassword"></stringProp>
            <stringProp name="proxyPort"></stringProp>
            <stringProp name="proxyUsername"></stringProp>
            <stringProp name="messageBacklog">3</stringProp>
            <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
          <hashTree/>
          <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="Open Non-Streaming Chat Socket (WebSocket Sampler)" enabled="true">
            <stringProp name="serverAddress">${TestEnvApiDomain}</stringProp>
            <stringProp name="serverPort">443</stringProp>
            <stringProp name="implementation">RFC6455 (v13)</stringProp>
            <stringProp name="protocol">wss</stringProp>
            <stringProp name="contextPath">/api/chat/chats/socket?X-Auth-Token=${xAuthToken}</stringProp>
            <stringProp name="contentEncoding">UTF-8</stringProp>
            <stringProp name="requestPayload">{&quot;type&quot;:&quot;HEART_BEAT&quot;}</stringProp>
            <stringProp name="connectionTimeout">5000</stringProp>
            <stringProp name="responseTimeout">20000</stringProp>
            <boolProp name="ignoreSslErrors">false</boolProp>
            <boolProp name="streamingConnection">false</boolProp>
            <stringProp name="connectionId"></stringProp>
            <stringProp name="responsePattern"></stringProp>
            <stringProp name="closeConncectionPattern"></stringProp>
            <stringProp name="proxyAddress"></stringProp>
            <stringProp name="proxyPassword"></stringProp>
            <stringProp name="proxyPort"></stringProp>
            <stringProp name="proxyUsername"></stringProp>
            <stringProp name="messageBacklog">3</stringProp>
            <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Save Renter Profile (Request)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;email&quot;:&quot;jmeter.tester@${__UUID()}.com&quot;,&#xd;
   &quot;productDetails&quot;:{&#xd;
      &quot;type&quot;:&quot;SEARCH_APP&quot;,&#xd;
      &quot;fullName&quot;:&quot;JMeter Tester&quot;,&#xd;
      &quot;firstName&quot;:&quot;JMeter&quot;,&#xd;
      &quot;lastName&quot;:&quot;Test&quot;,&#xd;
      &quot;mobileNumber&quot;:&quot;+380979999999&quot;,&#xd;
      &quot;profileImage&quot;:null,&#xd;
      &quot;moveDate&quot;:null,&#xd;
      &quot;contractLength&quot;:null,&#xd;
      &quot;appSettings&quot;:{&#xd;
         &quot;notificationsFrequency&quot;:&quot;DAILY&quot;&#xd;
      },&#xd;
      &quot;pets&quot;:[&#xd;
         &quot;DOGS&quot;&#xd;
      ],&#xd;
      &quot;aboutMe&quot;:&quot;Nice Guy&quot;,&#xd;
      &quot;houseHoldIncome&quot;:1,&#xd;
      &quot;cityKey&quot;:&quot;LONDON&quot;,&#xd;
      &quot;movingSituation&quot;:&quot;JUST_ME&quot;,&#xd;
      &quot;numberOfBedrooms&quot;:[&#xd;
         1&#xd;
      ],&#xd;
      &quot;employer&quot;:&quot;MB&quot;,&#xd;
      &quot;jobTitle&quot;:&quot;Job&quot;,&#xd;
      &quot;marketing&quot;:{&#xd;
         &quot;receiveNews&quot;:true&#xd;
      },&#xd;
      &quot;renterSavedSearch&quot;:{&#xd;
         &quot;cityKey&quot;:&quot;LONDON&quot;,&#xd;
         &quot;entityFilters&quot;:[&#xd;
&#xd;
         ],&#xd;
         &quot;sort&quot;:&quot;RENTER_FRIENDLY&quot;,&#xd;
         &quot;basicFilters&quot;:[&#xd;
            &quot;MOVEBUBBLE_ONE&quot;&#xd;
         ],&#xd;
         &quot;bedrooms&quot;:[&#xd;
            0,&#xd;
            1,&#xd;
            2,&#xd;
            3,&#xd;
            4&#xd;
         ],&#xd;
         &quot;bathrooms&quot;:[&#xd;
&#xd;
         ],&#xd;
         &quot;price&quot;:{&#xd;
            &quot;priceType&quot;:&quot;PER_MONTH&quot;,&#xd;
            &quot;priceFrom&quot;:null,&#xd;
            &quot;priceTo&quot;:null&#xd;
         }&#xd;
      },&#xd;
         &quot;featureToggles&quot;:[&#xd;
   ],&#xd;
      &quot;populationPercentage&quot;:54.54545454545454&#xd;
   }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/account/users/${userId}/product/SEARCH_APP/details</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">${xAuthToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Save Renter Device Details (Request)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;appKey&quot;:&quot;SEARCH_APP&quot;,&#xd;
   &quot;platform&quot;:&quot;IOS&quot;,&#xd;
   &quot;version&quot;:&quot;1.0.2.1&quot;,&#xd;
   &quot;deviceDetails&quot;:{&#xd;
      &quot;type&quot;:&quot;MOBILE&quot;,&#xd;
      &quot;make&quot;:&quot;Apple&quot;,&#xd;
      &quot;model&quot;:&quot;iPhone 8 Plus=&quot;,&#xd;
      &quot;os&quot;:&quot;IOS&quot;,&#xd;
      &quot;osVersion&quot;:&quot;13.3.1&quot;,&#xd;
      &quot;platformType&quot;:&quot;vIOS&quot;,&#xd;
      &quot;deviceId&quot;:&quot;someDeviceId&quot;,&#xd;
      &quot;registrationToken&quot;:&quot;someRegistrationToken&quot;,&#xd;
      &quot;apnsToken&quot;:&quot;someApnsToken&quot;&#xd;
   }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/account/users/${userId}/app/details</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">${xAuthToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Renter Saved Search (Request)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/account/users/${userId}/product/SEARCH_APP/details</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">${xAuthToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-mb-resolvers</stringProp>
                  <stringProp name="Header.value">RENTER_SAVED_SEARCH</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Contextual Configuration Entity Filters (Request)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;contexts&quot;:[],&quot;selects&quot;:[{&quot;type&quot;:&quot;KEY_PATTERNS&quot;,&quot;includePatterns&quot;:[&quot;searchApp.search.entityFilters&quot;],&quot;excludePatterns&quot;:[]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/contextual/configuration/select</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">${xAuthToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Contextual Configuration Cities (Request)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;contexts&quot;:[],&quot;selects&quot;:[{&quot;type&quot;:&quot;KEY_PATTERNS&quot;,&quot;includePatterns&quot;:[&quot;searchApp.search.cities&quot;],&quot;excludePatterns&quot;:[]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/contextual/configuration/select</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">${xAuthToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Contextual Configuration Emails (Request)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;contexts&quot;:[],&quot;selects&quot;:[{&quot;type&quot;:&quot;KEY_PATTERNS&quot;,&quot;includePatterns&quot;:[&quot;partnersApp.onboarding.emails.agent.get.help.login.email&quot;, &quot;searchApp.onboarding.emails.renter.vote.for.city.email&quot;,&quot;partnersPortal.onboarding.emails.agent.get.help.login.email&quot;],&quot;excludePatterns&quot;:[]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/contextual/configuration/select</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">${xAuthToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Contextual Configuration Everything Else (Request)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;contexts&quot;:[],&quot;selects&quot;:[{&quot;type&quot;:&quot;KEY_PATTERNS&quot;,&quot;includePatterns&quot;:[&quot;searchApp.*&quot;],&quot;excludePatterns&quot;:[&quot;searchApp.search.entityFilters&quot;, &quot;searchApp.search.cities&quot;,&quot;partnersApp.onboarding.emails.agent.get.help.login.email&quot;, &quot;searchApp.onboarding.emails.renter.vote.for.city.email&quot;,&quot;partnersPortal.onboarding.emails.agent.get.help.login.email&quot;]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/contextual/configuration/select</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">${xAuthToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Chat Badge Count (Request)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;appKey&quot;:&quot;SEARCH_APP&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/chat/chats/user/${userId}/badges</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">${xAuthToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-mb-resolvers</stringProp>
                  <stringProp name="Header.value">RENTER_SAVED_SEARCH</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Home Page Components (Request)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;type&quot;: &quot;SEARCH_PRODUCT_HOME_PAGE&quot;,&#xd;
  &quot;pagination&quot;: {&#xd;
    &quot;from&quot;: 0,&#xd;
    &quot;to&quot;: 20&#xd;
  },&#xd;
  &quot;details&quot;: {&#xd;
    &quot;renterSearch&quot;: {&#xd;
      &quot;cityKey&quot;: &quot;LONDON&quot;,&#xd;
      &quot;entityFilters&quot;: [	   {&#xd;
	   	&quot;type&quot;: &quot;AREA&quot;,&#xd;
	   	&quot;key&quot;: &quot;${areaKey}&quot;&#xd;
	   }	],&#xd;
      &quot;sort&quot;: null,&#xd;
      &quot;basicFilters&quot;: null,&#xd;
   &quot;bathrooms&quot;:[0, 1, 2, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 3))}],&#xd;
   &quot;bedrooms&quot;:[1, 2, 3, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 0))}],&#xd;
      &quot;price&quot;: {&#xd;
        &quot;priceType&quot;: &quot;PER_MONTH&quot;,&#xd;
      &quot;priceFrom&quot;:${__groovy(return (new Random().nextInt(700-500+1)+500))},&#xd;
      &quot;priceTo&quot;:${__groovy(return (new Random().nextInt(5000-4000+1)+4000))}&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/contextual/configuration/builder/page</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">${xAuthToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-mb-resolvers</stringProp>
                  <stringProp name="Header.value">RENTER_SAVED_SEARCH</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Area Params (CSV Config)" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">${SourceDirectory}/load-tests/LondonAreaKeys.txt</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">areaKey</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Home Page CITY_CENTER_HOMES (Request)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;savedSearch&quot;: {&#xd;
      &quot;cityKey&quot;: &quot;LONDON&quot;,&#xd;
      &quot;entityFilters&quot;: [	   {&#xd;
	   	&quot;type&quot;: &quot;AREA&quot;,&#xd;
	   	&quot;key&quot;: &quot;${areaKey}&quot;&#xd;
	   }	],&#xd;
      &quot;sort&quot;: null,&#xd;
      &quot;basicFilters&quot;: null,&#xd;
	   &quot;bathrooms&quot;:[0, 1, 2, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 3))}],&#xd;
	   &quot;bedrooms&quot;:[1, 2, 3, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 0))}],&#xd;
      &quot;price&quot;: {&#xd;
        &quot;priceType&quot;: &quot;PER_MONTH&quot;,&#xd;
      &quot;priceFrom&quot;:${__groovy(return (new Random().nextInt(700-500+1)+500))},&#xd;
      &quot;priceTo&quot;:${__groovy(return (new Random().nextInt(5000-4000+1)+4000))}&#xd;
      }&#xd;
    },&#xd;
  &quot;pagination&quot;: {&#xd;
  	&quot;from&quot;:0,&#xd;
  	&quot;to&quot;: 10&#xd;
  },&#xd;
  &quot;config&quot;: {&#xd;
        &quot;city&quot;: &quot;LONDON&quot;,&#xd;
        &quot;listKey&quot;: &quot;CITY_CENTER_HOMES&quot;,&#xd;
        &quot;previewAmountLimit&quot;: 5,&#xd;
        &quot;areas&quot;: [&#xd;
            &quot;LONDON_ZONE_1&quot;&#xd;
        ]&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/property/properties/predefined/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">${xAuthToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-mb-resolvers</stringProp>
                  <stringProp name="Header.value">RENTER_SAVED_SEARCH</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Area Params (CSV Config)" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">${SourceDirectory}/load-tests/LondonAreaKeys.txt</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">areaKey</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Home Page A_LITTLE_OVER_BUDGET (Request)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;savedSearch&quot;: {&#xd;
      &quot;cityKey&quot;: &quot;LONDON&quot;,&#xd;
      &quot;entityFilters&quot;: [	   {&#xd;
	   	&quot;type&quot;: &quot;AREA&quot;,&#xd;
	   	&quot;key&quot;: &quot;${areaKey}&quot;&#xd;
	   }	],&#xd;
      &quot;sort&quot;: null,&#xd;
      &quot;basicFilters&quot;: null,&#xd;
	   &quot;bathrooms&quot;:[0, 1, 2, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 3))}],&#xd;
	   &quot;bedrooms&quot;:[1, 2, 3, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 0))}],&#xd;
      &quot;price&quot;: {&#xd;
        &quot;priceType&quot;: &quot;PER_MONTH&quot;,&#xd;
      &quot;priceFrom&quot;:${__groovy(return (new Random().nextInt(700-500+1)+500))},&#xd;
      &quot;priceTo&quot;:${__groovy(return (new Random().nextInt(5000-4000+1)+4000))}&#xd;
      }&#xd;
    },&#xd;
  &quot;pagination&quot;: {&#xd;
  	&quot;from&quot;:0,&#xd;
  	&quot;to&quot;: 10&#xd;
  },&#xd;
  &quot;config&quot;: {&#xd;
        &quot;city&quot;: &quot;LONDON&quot;,&#xd;
        &quot;listKey&quot;: &quot;A_LITTLE_OVER_BUDGET&quot;,&#xd;
        &quot;previewAmountLimit&quot;: 5,&#xd;
        &quot;areas&quot;: [&#xd;
            &quot;LONDON_ZONE_1&quot;&#xd;
        ]&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/property/properties/predefined/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">${xAuthToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-mb-resolvers</stringProp>
                  <stringProp name="Header.value">RENTER_SAVED_SEARCH</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Area Params (CSV Config)" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">${SourceDirectory}/load-tests/LondonAreaKeys.txt</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">areaKey</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Home Page BILLS_INCLUDED (Request)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;savedSearch&quot;: {&#xd;
      &quot;cityKey&quot;: &quot;LONDON&quot;,&#xd;
      &quot;entityFilters&quot;: [	   {&#xd;
	   	&quot;type&quot;: &quot;AREA&quot;,&#xd;
	   	&quot;key&quot;: &quot;${areaKey}&quot;&#xd;
	   }	],&#xd;
      &quot;sort&quot;: null,&#xd;
      &quot;basicFilters&quot;: null,&#xd;
	   &quot;bathrooms&quot;:[0, 1, 2, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 3))}],&#xd;
	   &quot;bedrooms&quot;:[1, 2, 3, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 0))}],&#xd;
      &quot;price&quot;: {&#xd;
        &quot;priceType&quot;: &quot;PER_MONTH&quot;,&#xd;
      &quot;priceFrom&quot;:${__groovy(return (new Random().nextInt(700-500+1)+500))},&#xd;
      &quot;priceTo&quot;:${__groovy(return (new Random().nextInt(5000-4000+1)+4000))}&#xd;
      }&#xd;
    },&#xd;
  &quot;pagination&quot;: {&#xd;
  	&quot;from&quot;:0,&#xd;
  	&quot;to&quot;: 10&#xd;
  },&#xd;
  &quot;config&quot;: {&#xd;
        &quot;city&quot;: &quot;LONDON&quot;,&#xd;
        &quot;listKey&quot;: &quot;BILLS_INCLUDED&quot;,&#xd;
        &quot;previewAmountLimit&quot;: 5,&#xd;
        &quot;areas&quot;: [&#xd;
            &quot;LONDON_ZONE_1&quot;&#xd;
        ]&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/property/properties/predefined/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">${xAuthToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-mb-resolvers</stringProp>
                  <stringProp name="Header.value">RENTER_SAVED_SEARCH</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Area Params (CSV Config)" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">${SourceDirectory}/load-tests/LondonAreaKeys.txt</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">areaKey</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Home Page CHAT_IN_APP (Request)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;savedSearch&quot;: {&#xd;
      &quot;cityKey&quot;: &quot;LONDON&quot;,&#xd;
      &quot;entityFilters&quot;: [	   {&#xd;
	   	&quot;type&quot;: &quot;AREA&quot;,&#xd;
	   	&quot;key&quot;: &quot;${areaKey}&quot;&#xd;
	   }	],&#xd;
      &quot;sort&quot;: null,&#xd;
      &quot;basicFilters&quot;: null,&#xd;
	   &quot;bathrooms&quot;:[0, 1, 2, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 3))}],&#xd;
	   &quot;bedrooms&quot;:[1, 2, 3, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 0))}],&#xd;
      &quot;price&quot;: {&#xd;
        &quot;priceType&quot;: &quot;PER_MONTH&quot;,&#xd;
      &quot;priceFrom&quot;:${__groovy(return (new Random().nextInt(700-500+1)+500))},&#xd;
      &quot;priceTo&quot;:${__groovy(return (new Random().nextInt(5000-4000+1)+4000))}&#xd;
      }&#xd;
    },&#xd;
  &quot;pagination&quot;: {&#xd;
  	&quot;from&quot;:0,&#xd;
  	&quot;to&quot;: 10&#xd;
  },&#xd;
  &quot;config&quot;: {&#xd;
        &quot;city&quot;: &quot;LONDON&quot;,&#xd;
        &quot;listKey&quot;: &quot;CHAT_IN_APP&quot;,&#xd;
        &quot;previewAmountLimit&quot;: 5,&#xd;
        &quot;areas&quot;: [&#xd;
            &quot;LONDON_ZONE_1&quot;&#xd;
        ]&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/property/properties/predefined/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">${xAuthToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-mb-resolvers</stringProp>
                  <stringProp name="Header.value">RENTER_SAVED_SEARCH</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Area Params (CSV Config)" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">${SourceDirectory}/load-tests/LondonAreaKeys.txt</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">areaKey</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Home Page FIVE_STAR_SERVICE (Request)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;savedSearch&quot;: {&#xd;
      &quot;cityKey&quot;: &quot;LONDON&quot;,&#xd;
      &quot;entityFilters&quot;: [	   {&#xd;
	   	&quot;type&quot;: &quot;AREA&quot;,&#xd;
	   	&quot;key&quot;: &quot;${areaKey}&quot;&#xd;
	   }	],&#xd;
      &quot;sort&quot;: null,&#xd;
      &quot;basicFilters&quot;: null,&#xd;
	   &quot;bathrooms&quot;:[0, 1, 2, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 3))}],&#xd;
	   &quot;bedrooms&quot;:[1, 2, 3, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 0))}],&#xd;
      &quot;price&quot;: {&#xd;
        &quot;priceType&quot;: &quot;PER_MONTH&quot;,&#xd;
      &quot;priceFrom&quot;:${__groovy(return (new Random().nextInt(700-500+1)+500))},&#xd;
      &quot;priceTo&quot;:${__groovy(return (new Random().nextInt(5000-4000+1)+4000))}&#xd;
      }&#xd;
    },&#xd;
  &quot;pagination&quot;: {&#xd;
  	&quot;from&quot;:0,&#xd;
  	&quot;to&quot;: 10&#xd;
  },&#xd;
  &quot;config&quot;: {&#xd;
        &quot;city&quot;: &quot;LONDON&quot;,&#xd;
        &quot;listKey&quot;: &quot;FIVE_STAR_SERVICE&quot;,&#xd;
        &quot;previewAmountLimit&quot;: 5,&#xd;
        &quot;areas&quot;: [&#xd;
            &quot;LONDON_ZONE_1&quot;&#xd;
        ]&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/property/properties/predefined/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">${xAuthToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-mb-resolvers</stringProp>
                  <stringProp name="Header.value">RENTER_SAVED_SEARCH</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Area Params (CSV Config)" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">${SourceDirectory}/load-tests/LondonAreaKeys.txt</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">areaKey</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Home Page IN_HIGH_DEMAND (Request)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;savedSearch&quot;: {&#xd;
      &quot;cityKey&quot;: &quot;LONDON&quot;,&#xd;
      &quot;entityFilters&quot;: [	   {&#xd;
	   	&quot;type&quot;: &quot;AREA&quot;,&#xd;
	   	&quot;key&quot;: &quot;${areaKey}&quot;&#xd;
	   }	],&#xd;
      &quot;sort&quot;: null,&#xd;
      &quot;basicFilters&quot;: null,&#xd;
	   &quot;bathrooms&quot;:[0, 1, 2, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 3))}],&#xd;
	   &quot;bedrooms&quot;:[1, 2, 3, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 0))}],&#xd;
      &quot;price&quot;: {&#xd;
        &quot;priceType&quot;: &quot;PER_MONTH&quot;,&#xd;
      &quot;priceFrom&quot;:${__groovy(return (new Random().nextInt(700-500+1)+500))},&#xd;
      &quot;priceTo&quot;:${__groovy(return (new Random().nextInt(5000-4000+1)+4000))}&#xd;
      }&#xd;
    },&#xd;
  &quot;pagination&quot;: {&#xd;
  	&quot;from&quot;:0,&#xd;
  	&quot;to&quot;: 10&#xd;
  },&#xd;
  &quot;config&quot;: {&#xd;
        &quot;city&quot;: &quot;LONDON&quot;,&#xd;
        &quot;listKey&quot;: &quot;IN_HIGH_DEMAND&quot;,&#xd;
        &quot;previewAmountLimit&quot;: 5,&#xd;
        &quot;areas&quot;: [&#xd;
            &quot;LONDON_ZONE_1&quot;&#xd;
        ]&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/property/properties/predefined/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">${xAuthToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-mb-resolvers</stringProp>
                  <stringProp name="Header.value">RENTER_SAVED_SEARCH</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Area Params (CSV Config)" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">${SourceDirectory}/load-tests/LondonAreaKeys.txt</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">areaKey</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Home Page MOVEBUBBLE_ONE (Request)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;savedSearch&quot;: {&#xd;
      &quot;cityKey&quot;: &quot;LONDON&quot;,&#xd;
      &quot;entityFilters&quot;: [	   {&#xd;
	   	&quot;type&quot;: &quot;AREA&quot;,&#xd;
	   	&quot;key&quot;: &quot;${areaKey}&quot;&#xd;
	   }	],&#xd;
      &quot;sort&quot;: null,&#xd;
      &quot;basicFilters&quot;: null,&#xd;
	   &quot;bathrooms&quot;:[0, 1, 2, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 3))}],&#xd;
	   &quot;bedrooms&quot;:[1, 2, 3, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 0))}],&#xd;
      &quot;price&quot;: {&#xd;
        &quot;priceType&quot;: &quot;PER_MONTH&quot;,&#xd;
      &quot;priceFrom&quot;:${__groovy(return (new Random().nextInt(700-500+1)+500))},&#xd;
      &quot;priceTo&quot;:${__groovy(return (new Random().nextInt(5000-4000+1)+4000))}&#xd;
      }&#xd;
    },&#xd;
  &quot;pagination&quot;: {&#xd;
  	&quot;from&quot;:0,&#xd;
  	&quot;to&quot;: 10&#xd;
  },&#xd;
  &quot;config&quot;: {&#xd;
        &quot;city&quot;: &quot;LONDON&quot;,&#xd;
        &quot;listKey&quot;: &quot;MOVEBUBBLE_ONE&quot;,&#xd;
        &quot;previewAmountLimit&quot;: 5,&#xd;
        &quot;areas&quot;: [&#xd;
            &quot;LONDON_ZONE_1&quot;&#xd;
        ]&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/property/properties/predefined/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">${xAuthToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-mb-resolvers</stringProp>
                  <stringProp name="Header.value">RENTER_SAVED_SEARCH</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Area Params (CSV Config)" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">${SourceDirectory}/load-tests/LondonAreaKeys.txt</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">areaKey</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Home Page NEWLY_ADDED_FOR_YOU (Request)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;savedSearch&quot;: {&#xd;
      &quot;cityKey&quot;: &quot;LONDON&quot;,&#xd;
      &quot;entityFilters&quot;: [	   {&#xd;
	   	&quot;type&quot;: &quot;AREA&quot;,&#xd;
	   	&quot;key&quot;: &quot;${areaKey}&quot;&#xd;
	   }	],&#xd;
      &quot;sort&quot;: null,&#xd;
      &quot;basicFilters&quot;: null,&#xd;
	   &quot;bathrooms&quot;:[0, 1, 2, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 3))}],&#xd;
	   &quot;bedrooms&quot;:[1, 2, 3, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 0))}],&#xd;
      &quot;price&quot;: {&#xd;
        &quot;priceType&quot;: &quot;PER_MONTH&quot;,&#xd;
      &quot;priceFrom&quot;:${__groovy(return (new Random().nextInt(700-500+1)+500))},&#xd;
      &quot;priceTo&quot;:${__groovy(return (new Random().nextInt(5000-4000+1)+4000))}&#xd;
      }&#xd;
    },&#xd;
  &quot;pagination&quot;: {&#xd;
  	&quot;from&quot;:0,&#xd;
  	&quot;to&quot;: 10&#xd;
  },&#xd;
  &quot;config&quot;: {&#xd;
        &quot;city&quot;: &quot;LONDON&quot;,&#xd;
        &quot;listKey&quot;: &quot;NEWLY_ADDED_FOR_YOU&quot;,&#xd;
        &quot;previewAmountLimit&quot;: 5,&#xd;
        &quot;areas&quot;: [&#xd;
            &quot;LONDON_ZONE_1&quot;&#xd;
        ]&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/property/properties/predefined/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">${xAuthToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-mb-resolvers</stringProp>
                  <stringProp name="Header.value">RENTER_SAVED_SEARCH</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Area Params (CSV Config)" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">${SourceDirectory}/load-tests/LondonAreaKeys.txt</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">areaKey</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Home Page NEWLY_REFURBISHED (Request)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;savedSearch&quot;: {&#xd;
      &quot;cityKey&quot;: &quot;LONDON&quot;,&#xd;
      &quot;entityFilters&quot;: [	   {&#xd;
	   	&quot;type&quot;: &quot;AREA&quot;,&#xd;
	   	&quot;key&quot;: &quot;${areaKey}&quot;&#xd;
	   }	],&#xd;
      &quot;sort&quot;: null,&#xd;
      &quot;basicFilters&quot;: null,&#xd;
	   &quot;bathrooms&quot;:[0, 1, 2, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 3))}],&#xd;
	   &quot;bedrooms&quot;:[1, 2, 3, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 0))}],&#xd;
      &quot;price&quot;: {&#xd;
        &quot;priceType&quot;: &quot;PER_MONTH&quot;,&#xd;
      &quot;priceFrom&quot;:${__groovy(return (new Random().nextInt(700-500+1)+500))},&#xd;
      &quot;priceTo&quot;:${__groovy(return (new Random().nextInt(5000-4000+1)+4000))}&#xd;
      }&#xd;
    },&#xd;
  &quot;pagination&quot;: {&#xd;
  	&quot;from&quot;:0,&#xd;
  	&quot;to&quot;: 10&#xd;
  },&#xd;
  &quot;config&quot;: {&#xd;
        &quot;city&quot;: &quot;LONDON&quot;,&#xd;
        &quot;listKey&quot;: &quot;NEWLY_REFURBISHED&quot;,&#xd;
        &quot;previewAmountLimit&quot;: 5,&#xd;
        &quot;areas&quot;: [&#xd;
            &quot;LONDON_ZONE_1&quot;&#xd;
        ]&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/property/properties/predefined/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">${xAuthToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-mb-resolvers</stringProp>
                  <stringProp name="Header.value">RENTER_SAVED_SEARCH</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Area Params (CSV Config)" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">${SourceDirectory}/load-tests/LondonAreaKeys.txt</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">areaKey</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Home Page ONCE_YOU_CONTACTED (Request)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;savedSearch&quot;: {&#xd;
      &quot;cityKey&quot;: &quot;LONDON&quot;,&#xd;
      &quot;entityFilters&quot;: [	   {&#xd;
	   	&quot;type&quot;: &quot;AREA&quot;,&#xd;
	   	&quot;key&quot;: &quot;${areaKey}&quot;&#xd;
	   }	],&#xd;
      &quot;sort&quot;: null,&#xd;
      &quot;basicFilters&quot;: null,&#xd;
	   &quot;bathrooms&quot;:[0, 1, 2, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 3))}],&#xd;
	   &quot;bedrooms&quot;:[1, 2, 3, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 0))}],&#xd;
      &quot;price&quot;: {&#xd;
        &quot;priceType&quot;: &quot;PER_MONTH&quot;,&#xd;
      &quot;priceFrom&quot;:${__groovy(return (new Random().nextInt(700-500+1)+500))},&#xd;
      &quot;priceTo&quot;:${__groovy(return (new Random().nextInt(5000-4000+1)+4000))}&#xd;
      }&#xd;
    },&#xd;
  &quot;pagination&quot;: {&#xd;
  	&quot;from&quot;:0,&#xd;
  	&quot;to&quot;: 10&#xd;
  },&#xd;
  &quot;config&quot;: {&#xd;
        &quot;city&quot;: &quot;LONDON&quot;,&#xd;
        &quot;listKey&quot;: &quot;ONCE_YOU_CONTACTED&quot;,&#xd;
        &quot;previewAmountLimit&quot;: 5,&#xd;
        &quot;areas&quot;: [&#xd;
            &quot;LONDON_ZONE_1&quot;&#xd;
        ]&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/property/properties/predefined/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">${xAuthToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-mb-resolvers</stringProp>
                  <stringProp name="Header.value">RENTER_SAVED_SEARCH</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Area Params (CSV Config)" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">${SourceDirectory}/load-tests/LondonAreaKeys.txt</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">areaKey</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Home Page PET_FRIENDLY (Request)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;savedSearch&quot;: {&#xd;
      &quot;cityKey&quot;: &quot;LONDON&quot;,&#xd;
      &quot;entityFilters&quot;: [	   {&#xd;
	   	&quot;type&quot;: &quot;AREA&quot;,&#xd;
	   	&quot;key&quot;: &quot;${areaKey}&quot;&#xd;
	   }	],&#xd;
      &quot;sort&quot;: null,&#xd;
      &quot;basicFilters&quot;: null,&#xd;
	   &quot;bathrooms&quot;:[0, 1, 2, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 3))}],&#xd;
	   &quot;bedrooms&quot;:[1, 2, 3, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 0))}],&#xd;
      &quot;price&quot;: {&#xd;
        &quot;priceType&quot;: &quot;PER_MONTH&quot;,&#xd;
      &quot;priceFrom&quot;:${__groovy(return (new Random().nextInt(700-500+1)+500))},&#xd;
      &quot;priceTo&quot;:${__groovy(return (new Random().nextInt(5000-4000+1)+4000))}&#xd;
      }&#xd;
    },&#xd;
  &quot;pagination&quot;: {&#xd;
  	&quot;from&quot;:0,&#xd;
  	&quot;to&quot;: 10&#xd;
  },&#xd;
  &quot;config&quot;: {&#xd;
        &quot;city&quot;: &quot;LONDON&quot;,&#xd;
        &quot;listKey&quot;: &quot;PET_FRIENDLY&quot;,&#xd;
        &quot;previewAmountLimit&quot;: 5,&#xd;
        &quot;areas&quot;: [&#xd;
            &quot;LONDON_ZONE_1&quot;&#xd;
        ]&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/property/properties/predefined/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">${xAuthToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-mb-resolvers</stringProp>
                  <stringProp name="Header.value">RENTER_SAVED_SEARCH</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Area Params (CSV Config)" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">${SourceDirectory}/load-tests/LondonAreaKeys.txt</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">areaKey</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Home Page ROOM_ONLY (Request)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;savedSearch&quot;: {&#xd;
      &quot;cityKey&quot;: &quot;LONDON&quot;,&#xd;
      &quot;entityFilters&quot;: [	   {&#xd;
	   	&quot;type&quot;: &quot;AREA&quot;,&#xd;
	   	&quot;key&quot;: &quot;${areaKey}&quot;&#xd;
	   }	],&#xd;
      &quot;sort&quot;: null,&#xd;
      &quot;basicFilters&quot;: null,&#xd;
	   &quot;bathrooms&quot;:[0, 1, 2, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 3))}],&#xd;
	   &quot;bedrooms&quot;:[1, 2, 3, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 0))}],&#xd;
      &quot;price&quot;: {&#xd;
        &quot;priceType&quot;: &quot;PER_MONTH&quot;,&#xd;
      &quot;priceFrom&quot;:${__groovy(return (new Random().nextInt(700-500+1)+500))},&#xd;
      &quot;priceTo&quot;:${__groovy(return (new Random().nextInt(5000-4000+1)+4000))}&#xd;
      }&#xd;
    },&#xd;
  &quot;pagination&quot;: {&#xd;
  	&quot;from&quot;:0,&#xd;
  	&quot;to&quot;: 10&#xd;
  },&#xd;
  &quot;config&quot;: {&#xd;
        &quot;city&quot;: &quot;LONDON&quot;,&#xd;
        &quot;listKey&quot;: &quot;ROOM_ONLY&quot;,&#xd;
        &quot;previewAmountLimit&quot;: 5,&#xd;
        &quot;areas&quot;: [&#xd;
            &quot;LONDON_ZONE_1&quot;&#xd;
        ]&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/property/properties/predefined/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">${xAuthToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-mb-resolvers</stringProp>
                  <stringProp name="Header.value">RENTER_SAVED_SEARCH</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Area Params (CSV Config)" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">${SourceDirectory}/load-tests/LondonAreaKeys.txt</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">areaKey</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Home Page SUPER_FAST_RESPONSE (Request)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;savedSearch&quot;: {&#xd;
      &quot;cityKey&quot;: &quot;LONDON&quot;,&#xd;
      &quot;entityFilters&quot;: [	   {&#xd;
	   	&quot;type&quot;: &quot;AREA&quot;,&#xd;
	   	&quot;key&quot;: &quot;${areaKey}&quot;&#xd;
	   }	],&#xd;
      &quot;sort&quot;: null,&#xd;
      &quot;basicFilters&quot;: null,&#xd;
	   &quot;bathrooms&quot;:[0, 1, 2, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 3))}],&#xd;
	   &quot;bedrooms&quot;:[1, 2, 3, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 0))}],&#xd;
      &quot;price&quot;: {&#xd;
        &quot;priceType&quot;: &quot;PER_MONTH&quot;,&#xd;
      &quot;priceFrom&quot;:${__groovy(return (new Random().nextInt(700-500+1)+500))},&#xd;
      &quot;priceTo&quot;:${__groovy(return (new Random().nextInt(5000-4000+1)+4000))}&#xd;
      }&#xd;
    },&#xd;
  &quot;pagination&quot;: {&#xd;
  	&quot;from&quot;:0,&#xd;
  	&quot;to&quot;: 10&#xd;
  },&#xd;
  &quot;config&quot;: {&#xd;
        &quot;city&quot;: &quot;LONDON&quot;,&#xd;
        &quot;listKey&quot;: &quot;SUPER_FAST_RESPONSE&quot;,&#xd;
        &quot;previewAmountLimit&quot;: 5,&#xd;
        &quot;areas&quot;: [&#xd;
            &quot;LONDON_ZONE_1&quot;&#xd;
        ]&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/property/properties/predefined/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">${xAuthToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-mb-resolvers</stringProp>
                  <stringProp name="Header.value">RENTER_SAVED_SEARCH</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Area Params (CSV Config)" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">${SourceDirectory}/load-tests/LondonAreaKeys.txt</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">areaKey</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Home Page THE_FRESHEST_HOMES (Request)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;savedSearch&quot;: {&#xd;
      &quot;cityKey&quot;: &quot;LONDON&quot;,&#xd;
      &quot;entityFilters&quot;: [	   {&#xd;
	   	&quot;type&quot;: &quot;AREA&quot;,&#xd;
	   	&quot;key&quot;: &quot;${areaKey}&quot;&#xd;
	   }	],&#xd;
      &quot;sort&quot;: null,&#xd;
      &quot;basicFilters&quot;: null,&#xd;
	   &quot;bathrooms&quot;:[0, 1, 2, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 3))}],&#xd;
	   &quot;bedrooms&quot;:[1, 2, 3, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 0))}],&#xd;
      &quot;price&quot;: {&#xd;
        &quot;priceType&quot;: &quot;PER_MONTH&quot;,&#xd;
      &quot;priceFrom&quot;:${__groovy(return (new Random().nextInt(700-500+1)+500))},&#xd;
      &quot;priceTo&quot;:${__groovy(return (new Random().nextInt(5000-4000+1)+4000))}&#xd;
      }&#xd;
    },&#xd;
  &quot;pagination&quot;: {&#xd;
  	&quot;from&quot;:0,&#xd;
  	&quot;to&quot;: 10&#xd;
  },&#xd;
  &quot;config&quot;: {&#xd;
        &quot;city&quot;: &quot;LONDON&quot;,&#xd;
        &quot;listKey&quot;: &quot;THE_FRESHEST_HOMES&quot;,&#xd;
        &quot;previewAmountLimit&quot;: 5,&#xd;
        &quot;areas&quot;: [&#xd;
            &quot;LONDON_ZONE_1&quot;&#xd;
        ]&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/property/properties/predefined/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">${xAuthToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-mb-resolvers</stringProp>
                  <stringProp name="Header.value">RENTER_SAVED_SEARCH</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Area Params (CSV Config)" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">${SourceDirectory}/load-tests/LondonAreaKeys.txt</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">areaKey</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Home Page WITH_FLOOR_PLANS (Request)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;savedSearch&quot;: {&#xd;
      &quot;cityKey&quot;: &quot;LONDON&quot;,&#xd;
      &quot;entityFilters&quot;: [	   {&#xd;
	   	&quot;type&quot;: &quot;AREA&quot;,&#xd;
	   	&quot;key&quot;: &quot;${areaKey}&quot;&#xd;
	   }	],&#xd;
      &quot;sort&quot;: null,&#xd;
      &quot;basicFilters&quot;: null,&#xd;
	   &quot;bathrooms&quot;:[0, 1, 2, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 3))}],&#xd;
	   &quot;bedrooms&quot;:[1, 2, 3, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 0))}],&#xd;
      &quot;price&quot;: {&#xd;
        &quot;priceType&quot;: &quot;PER_MONTH&quot;,&#xd;
      &quot;priceFrom&quot;:${__groovy(return (new Random().nextInt(700-500+1)+500))},&#xd;
      &quot;priceTo&quot;:${__groovy(return (new Random().nextInt(5000-4000+1)+4000))}&#xd;
      }&#xd;
    },&#xd;
  &quot;pagination&quot;: {&#xd;
  	&quot;from&quot;:0,&#xd;
  	&quot;to&quot;: 10&#xd;
  },&#xd;
  &quot;config&quot;: {&#xd;
        &quot;city&quot;: &quot;LONDON&quot;,&#xd;
        &quot;listKey&quot;: &quot;WITH_FLOOR_PLANS&quot;,&#xd;
        &quot;previewAmountLimit&quot;: 5,&#xd;
        &quot;areas&quot;: [&#xd;
            &quot;LONDON_ZONE_1&quot;&#xd;
        ]&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/property/properties/predefined/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">${xAuthToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-mb-resolvers</stringProp>
                  <stringProp name="Header.value">RENTER_SAVED_SEARCH</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Area Params (CSV Config)" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">${SourceDirectory}/load-tests/LondonAreaKeys.txt</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">areaKey</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Home Page WITH_OUTSIDE_SPACE (Request)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;savedSearch&quot;: {&#xd;
      &quot;cityKey&quot;: &quot;LONDON&quot;,&#xd;
      &quot;entityFilters&quot;: [	   {&#xd;
	   	&quot;type&quot;: &quot;AREA&quot;,&#xd;
	   	&quot;key&quot;: &quot;${areaKey}&quot;&#xd;
	   }	],&#xd;
      &quot;sort&quot;: null,&#xd;
      &quot;basicFilters&quot;: null,&#xd;
	   &quot;bathrooms&quot;:[0, 1, 2, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 3))}],&#xd;
	   &quot;bedrooms&quot;:[1, 2, 3, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 0))}],&#xd;
      &quot;price&quot;: {&#xd;
        &quot;priceType&quot;: &quot;PER_MONTH&quot;,&#xd;
      &quot;priceFrom&quot;:${__groovy(return (new Random().nextInt(700-500+1)+500))},&#xd;
      &quot;priceTo&quot;:${__groovy(return (new Random().nextInt(5000-4000+1)+4000))}&#xd;
      }&#xd;
    },&#xd;
  &quot;pagination&quot;: {&#xd;
  	&quot;from&quot;:0,&#xd;
  	&quot;to&quot;: 10&#xd;
  },&#xd;
  &quot;config&quot;: {&#xd;
        &quot;city&quot;: &quot;LONDON&quot;,&#xd;
        &quot;listKey&quot;: &quot;WITH_OUTSIDE_SPACE&quot;,&#xd;
        &quot;previewAmountLimit&quot;: 5,&#xd;
        &quot;areas&quot;: [&#xd;
            &quot;LONDON_ZONE_1&quot;&#xd;
        ]&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/property/properties/predefined/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">${xAuthToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-mb-resolvers</stringProp>
                  <stringProp name="Header.value">RENTER_SAVED_SEARCH</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Area Params (CSV Config)" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">${SourceDirectory}/load-tests/LondonAreaKeys.txt</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">areaKey</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Search Feed Full Cycle (Loop Controller)" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Perform Several Narrow Searches (Loop Controller)" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">3</stringProp>
            </LoopController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Renter Narrow Search (Request)" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
   &quot;pagination&quot;:{&#xd;
      &quot;from&quot;:0,&#xd;
      &quot;to&quot;:15&#xd;
   },&#xd;
   &quot;basicFilters&quot;:[&#xd;
   	&quot;${basicFilter}&quot;&#xd;
   ],&#xd;
   &quot;entityFilters&quot;:[&#xd;
	   {&#xd;
	   	&quot;type&quot;: &quot;AREA&quot;,&#xd;
	   	&quot;key&quot;: &quot;${areaKey}&quot;&#xd;
	   }	&#xd;
   ],&#xd;
   &quot;bathrooms&quot;:[0, 1, 2, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 3))}],&#xd;
   &quot;bedrooms&quot;:[1, 2, 3, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 0))}],&#xd;
   &quot;sort&quot;:&quot;${sortOption}&quot;,&#xd;
   &quot;price&quot;:{&#xd;
      &quot;priceType&quot;:&quot;PER_MONTH&quot;,&#xd;
      &quot;priceFrom&quot;:${__groovy(return (new Random().nextInt(700-500+1)+500))},&#xd;
      &quot;priceTo&quot;:${__groovy(return (new Random().nextInt(5000-4000+1)+4000))}&#xd;
   },&#xd;
   &quot;cityKey&quot;:&quot;LONDON&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/property/properties/renter/search</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">X-Auth-Token</stringProp>
                      <stringProp name="Header.value">${xAuthToken}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Query Params (CSV Config)" enabled="true">
                  <stringProp name="delimiter">,</stringProp>
                  <stringProp name="fileEncoding"></stringProp>
                  <stringProp name="filename">${SourceDirectory}/load-tests/RenterSearchSortOptions.csv</stringProp>
                  <boolProp name="ignoreFirstLine">false</boolProp>
                  <boolProp name="quotedData">false</boolProp>
                  <boolProp name="recycle">true</boolProp>
                  <stringProp name="shareMode">shareMode.all</stringProp>
                  <boolProp name="stopThread">false</boolProp>
                  <stringProp name="variableNames">sortOption</stringProp>
                </CSVDataSet>
                <hashTree/>
                <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Area Params (CSV Config)" enabled="true">
                  <stringProp name="delimiter">,</stringProp>
                  <stringProp name="fileEncoding"></stringProp>
                  <stringProp name="filename">${SourceDirectory}/load-tests/LondonAreaKeys.txt</stringProp>
                  <boolProp name="ignoreFirstLine">false</boolProp>
                  <boolProp name="quotedData">false</boolProp>
                  <boolProp name="recycle">true</boolProp>
                  <stringProp name="shareMode">shareMode.all</stringProp>
                  <boolProp name="stopThread">false</boolProp>
                  <stringProp name="variableNames">areaKey</stringProp>
                </CSVDataSet>
                <hashTree/>
                <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Basic Filter Params (CSV Config)" enabled="true">
                  <stringProp name="delimiter">,</stringProp>
                  <stringProp name="fileEncoding"></stringProp>
                  <stringProp name="filename">${SourceDirectory}/load-tests/RenterSearchBasicFilterOptions.txt</stringProp>
                  <boolProp name="ignoreFirstLine">false</boolProp>
                  <boolProp name="quotedData">false</boolProp>
                  <boolProp name="recycle">true</boolProp>
                  <stringProp name="shareMode">shareMode.all</stringProp>
                  <boolProp name="stopThread">false</boolProp>
                  <stringProp name="variableNames">basicFilter</stringProp>
                </CSVDataSet>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Perform Several Wide Searches (Loop Controller)" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">3</stringProp>
            </LoopController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Renter Wide Search (Request)" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
   &quot;pagination&quot;:{&#xd;
      &quot;from&quot;:0,&#xd;
      &quot;to&quot;:15&#xd;
   },&#xd;
   &quot;basicFilters&quot;:[&#xd;
   ],&#xd;
   &quot;entityFilters&quot;:[&#xd;
   ],&#xd;
   &quot;bathrooms&quot;:[0, 1, 2, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 3))}],&#xd;
   &quot;bedrooms&quot;:[1, 2, 3, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 0))}],&#xd;
   &quot;sort&quot;:&quot;${sortOption}&quot;,&#xd;
   &quot;price&quot;:{&#xd;
      &quot;priceType&quot;:&quot;PER_MONTH&quot;,&#xd;
      &quot;priceFrom&quot;:${__groovy(return (new Random().nextInt(700-500+1)+500))},&#xd;
      &quot;priceTo&quot;:${__groovy(return (new Random().nextInt(5000-4000+1)+4000))}&#xd;
   },&#xd;
   &quot;cityKey&quot;:&quot;LONDON&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/property/properties/renter/search</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">X-Auth-Token</stringProp>
                      <stringProp name="Header.value">${xAuthToken}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Query Params (CSV Config)" enabled="true">
                  <stringProp name="delimiter">,</stringProp>
                  <stringProp name="fileEncoding"></stringProp>
                  <stringProp name="filename">./RenterSearchSortOptions.csv</stringProp>
                  <boolProp name="ignoreFirstLine">false</boolProp>
                  <boolProp name="quotedData">false</boolProp>
                  <boolProp name="recycle">true</boolProp>
                  <stringProp name="shareMode">shareMode.all</stringProp>
                  <boolProp name="stopThread">false</boolProp>
                  <stringProp name="variableNames">sortOption</stringProp>
                </CSVDataSet>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Final Renter Wide Search (Request)" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
   &quot;pagination&quot;:{&#xd;
      &quot;from&quot;:0,&#xd;
      &quot;to&quot;:15&#xd;
   },&#xd;
   &quot;basicFilters&quot;:[&#xd;
   ],&#xd;
   &quot;entityFilters&quot;:[&#xd;
   ],&#xd;
   &quot;bathrooms&quot;:[0, 1, 2, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 3))}],&#xd;
   &quot;bedrooms&quot;:[1, 2, 3, ${__groovy(return (new Random().nextInt(2) == 1 ? 4 : 0))}],&#xd;
   &quot;sort&quot;:&quot;${sortOption}&quot;,&#xd;
   &quot;price&quot;:{&#xd;
      &quot;priceType&quot;:&quot;PER_MONTH&quot;,&#xd;
      &quot;priceFrom&quot;:${__groovy(return (new Random().nextInt(700-500+1)+500))},&#xd;
      &quot;priceTo&quot;:${__groovy(return (new Random().nextInt(5000-4000+1)+4000))}&#xd;
   },&#xd;
   &quot;cityKey&quot;:&quot;LONDON&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/property/properties/renter/search</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">X-Auth-Token</stringProp>
                    <stringProp name="Header.value">${xAuthToken}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Property Ids Extractor (JSON Extractor)" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">searchResultPropertyIds</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$..id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Property Unit Ids Extractor (JSON Extractor)" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">searchResultPropertyUnitIds</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$..unitId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Query Params (CSV Config)" enabled="true">
                <stringProp name="delimiter">,</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="filename">./RenterSearchSortOptions.csv</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="variableNames">sortOption</stringProp>
              </CSVDataSet>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Property 1 Details (Request)" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/property/properties/${searchResultPropertyIds_1}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">X-Auth-Token</stringProp>
                    <stringProp name="Header.value">${xAuthToken}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">x-mb-resolvers</stringProp>
                    <stringProp name="Header.value">BTR_AGGREGATE_PROPERTIES,USERS,ORGANIZATIONS,UNITS</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Property 2 Details (Request)" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/property/properties/${searchResultPropertyIds_2}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">X-Auth-Token</stringProp>
                    <stringProp name="Header.value">${xAuthToken}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">x-mb-resolvers</stringProp>
                    <stringProp name="Header.value">BTR_AGGREGATE_PROPERTIES,USERS,ORGANIZATIONS,UNITS</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Property 3 Details (Request)" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/property/properties/${searchResultPropertyIds_3}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">X-Auth-Token</stringProp>
                    <stringProp name="Header.value">${xAuthToken}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">x-mb-resolvers</stringProp>
                    <stringProp name="Header.value">BTR_AGGREGATE_PROPERTIES,USERS,ORGANIZATIONS,UNITS</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Property 4 Details (Request)" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/property/properties/${searchResultPropertyIds_4}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">X-Auth-Token</stringProp>
                    <stringProp name="Header.value">${xAuthToken}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">x-mb-resolvers</stringProp>
                    <stringProp name="Header.value">BTR_AGGREGATE_PROPERTIES,USERS,ORGANIZATIONS,UNITS</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Property 5 Details (Request)" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/property/properties/${searchResultPropertyIds_5}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">X-Auth-Token</stringProp>
                    <stringProp name="Header.value">${xAuthToken}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">x-mb-resolvers</stringProp>
                    <stringProp name="Header.value">BTR_AGGREGATE_PROPERTIES,USERS,ORGANIZATIONS,UNITS</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Property to Watchlist (Request)" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/property/${searchResultPropertyIds_1}/watchlist</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">X-Auth-Token</stringProp>
                    <stringProp name="Header.value">${xAuthToken}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Watchlist Properties (Request)" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;type&quot;:&quot;AVAILABLE&quot;,&#xd;
	&quot;pagination&quot;: {&#xd;
		&quot;from&quot;: 0, &#xd;
		&quot;to&quot;: 10&#xd;
	}&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/property/watchlist/retrieve</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">X-Auth-Token</stringProp>
                    <stringProp name="Header.value">${xAuthToken}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Remove Property from Watchlist (Request)" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/property/${searchResultPropertyIds_1}/watchlist</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">X-Auth-Token</stringProp>
                    <stringProp name="Header.value">${xAuthToken}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Enquire Validate on Property (Request)" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;propertyUnitId&quot;:&quot;${searchResultPropertyUnitIds_1}&quot;,&quot;propertyId&quot;:&quot;${searchResultPropertyIds_1}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/chat/chats/enquiries/validate</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">X-Auth-Token</stringProp>
                    <stringProp name="Header.value">${xAuthToken}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Enquire on Property (Request)" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;userId&quot;:&quot;${userId}&quot;,&quot;details&quot;:{&quot;type&quot;:&quot;CHAT&quot;,&quot;text&quot;:&quot;Hey, I have a quick question about this property!&quot;,&quot;propertyId&quot;:&quot;${searchResultPropertyIds_1}&quot;,&quot;chatId&quot;:null}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/property/enquiries</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">X-Auth-Token</stringProp>
                    <stringProp name="Header.value">${xAuthToken}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Enquiry Chat Id Extractor (JSON Extractor)" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">enquiryChatId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.details.chatId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Active Chats (Request)" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;type&quot;:&quot;ACTIVE_CHATS&quot;,&quot;filters&quot;:[],&quot;from&quot;:0,&quot;to&quot;:10}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/chat/chats/search</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">This may be empty on fitst loop iteration as indexing of chat is async process on backend</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">X-Auth-Token</stringProp>
                    <stringProp name="Header.value">${xAuthToken}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Chat Details (Request)" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/chat/chats/${enquiryChatId}/details</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">This may always be empty as indexing of chat is async process on backend</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">X-Auth-Token</stringProp>
                    <stringProp name="Header.value">${xAuthToken}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">x-mb-resolvers</stringProp>
                    <stringProp name="Header.value">CHAT_MEMBERS,MESSAGES,UNIT,ORGANIZATION</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Push Chat Messages Cycle (Loop Controller)" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">5</stringProp>
            </LoopController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Push Chat Message (Request)" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;messages&quot;: [&#xd;
		{&#xd;
			&quot;type&quot;: &quot;TEXT_MESSAGE&quot;,&#xd;
			&quot;text&quot;: &quot;JMeter super keep to get this apartment&quot;&#xd;
		}&#xd;
	]&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/chat/chats/${enquiryChatId}/messages</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">This may always be empty as indexing of chat is async process on backend</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">X-Auth-Token</stringProp>
                      <stringProp name="Header.value">${xAuthToken}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Renter App Sockets (Thread Group)" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">400</stringProp>
        <stringProp name="ThreadGroup.ramp_time">60</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">10000</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login Anonymous Renter (Request)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;appKey&quot;: &quot;SEARCH_APP&quot;,&#xd;
	&quot;authDetails&quot;: {&#xd;
		&quot;type&quot;: &quot;ANONYMOUS&quot;&#xd;
	}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/auth/auth</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Auth Token Extractor (JSON Extractor)" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">xAuthToken</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="User Id Extractor (JSON Extractor)" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">userId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.userId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="Open Streaming Notifications Socket (WebSocket Sampler)" enabled="true">
          <stringProp name="serverAddress">${TestEnvApiDomain}</stringProp>
          <stringProp name="serverPort">443</stringProp>
          <stringProp name="implementation">RFC6455 (v13)</stringProp>
          <stringProp name="protocol">wss</stringProp>
          <stringProp name="contextPath">/api/notification/notifications/socket?X-Auth-Token=${xAuthToken}</stringProp>
          <stringProp name="contentEncoding">UTF-8</stringProp>
          <stringProp name="requestPayload">{&quot;type&quot;:&quot;HEART_BEAT&quot;}</stringProp>
          <stringProp name="connectionTimeout">10000</stringProp>
          <stringProp name="responseTimeout">20000</stringProp>
          <boolProp name="ignoreSslErrors">false</boolProp>
          <boolProp name="streamingConnection">true</boolProp>
          <stringProp name="connectionId"></stringProp>
          <stringProp name="responsePattern"></stringProp>
          <stringProp name="closeConncectionPattern"></stringProp>
          <stringProp name="proxyAddress"></stringProp>
          <stringProp name="proxyPassword"></stringProp>
          <stringProp name="proxyPort"></stringProp>
          <stringProp name="proxyUsername"></stringProp>
          <stringProp name="messageBacklog">3</stringProp>
          <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
        <hashTree/>
        <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="Open Streaming Chat Socket (WebSocket Sampler)" enabled="true">
          <stringProp name="serverAddress">${TestEnvApiDomain}</stringProp>
          <stringProp name="serverPort">443</stringProp>
          <stringProp name="implementation">RFC6455 (v13)</stringProp>
          <stringProp name="protocol">wss</stringProp>
          <stringProp name="contextPath">/api/chat/chats/socket?X-Auth-Token=${xAuthToken}</stringProp>
          <stringProp name="contentEncoding">UTF-8</stringProp>
          <stringProp name="requestPayload">{&quot;type&quot;:&quot;HEART_BEAT&quot;}</stringProp>
          <stringProp name="connectionTimeout">10000</stringProp>
          <stringProp name="responseTimeout">20000</stringProp>
          <boolProp name="ignoreSslErrors">false</boolProp>
          <boolProp name="streamingConnection">true</boolProp>
          <stringProp name="connectionId"></stringProp>
          <stringProp name="responsePattern"></stringProp>
          <stringProp name="closeConncectionPattern"></stringProp>
          <stringProp name="proxyAddress"></stringProp>
          <stringProp name="proxyPassword"></stringProp>
          <stringProp name="proxyPort"></stringProp>
          <stringProp name="proxyUsername"></stringProp>
          <stringProp name="messageBacklog">3</stringProp>
          <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${TestEnvApiDomain}</stringProp>
        <stringProp name="HTTPSampler.port">${TestEnvPort}</stringProp>
        <stringProp name="HTTPSampler.protocol">${TestEnvProtocol}</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
        <stringProp name="HTTPSampler.connect_timeout">30000</stringProp>
        <stringProp name="HTTPSampler.response_timeout">60000</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Global Variables (Local Env Profile)" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="TestEnvProtocol" elementType="Argument">
            <stringProp name="Argument.name">TestEnvProtocol</stringProp>
            <stringProp name="Argument.value">http</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TestEnvApiDomain" elementType="Argument">
            <stringProp name="Argument.name">TestEnvApiDomain</stringProp>
            <stringProp name="Argument.value">api.local.movebubble.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TestEnvPort" elementType="Argument">
            <stringProp name="Argument.name">TestEnvPort</stringProp>
            <stringProp name="Argument.value">80</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Global Variables (Stage Env Profile)" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="TestEnvProtocol" elementType="Argument">
            <stringProp name="Argument.name">TestEnvProtocol</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TestEnvApiDomain" elementType="Argument">
            <stringProp name="Argument.name">TestEnvApiDomain</stringProp>
            <stringProp name="Argument.value">api.stage.movebubble.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TestEnvPort" elementType="Argument">
            <stringProp name="Argument.name">TestEnvPort</stringProp>
            <stringProp name="Argument.value">443</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Global Variables (Prod Env Profile)" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="TestEnvProtocol" elementType="Argument">
            <stringProp name="Argument.name">TestEnvProtocol</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TestEnvApiDomain" elementType="Argument">
            <stringProp name="Argument.name">TestEnvApiDomain</stringProp>
            <stringProp name="Argument.value">api-v2.movebubble.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TestEnvPort" elementType="Argument">
            <stringProp name="Argument.name">TestEnvPort</stringProp>
            <stringProp name="Argument.value">443</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
